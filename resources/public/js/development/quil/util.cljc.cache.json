["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "],"~$Processing",["^ ","~$prototype",["^ ","~$PConstants",["^ "]]]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$quil.util","~:imports",null,"~:requires",["^ ","~$cstr","~$clojure.string","^?","^?"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$clj-compilation?",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/mmz/Projects/matrixrain/resources/public/js/development/quil/util.cljc","~:line",76,"~:column",7,"~:end-line",76,"~:end-column",23,"~:arglists",["~#list",["~$quote",["^L",[[]]]]]],"^:","~$quil.util/clj-compilation?","^F","resources/public/js/development/quil/util.cljc","^J",23,"~:method-params",["^L",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^L",[null,null]],"^H",1,"~:variadic?",false,"^G",76,"~:ret-tag","~$boolean","^I",76,"~:max-fixed-arity",0,"~:fn-var",true,"^K",["^L",["^M",["^L",[[]]]]]],"~$make-quil-constant-map",["^ ","^D",null,"^E",["^ ","^F","/Users/mmz/Projects/matrixrain/resources/public/js/development/quil/util.cljc","^G",102,"^H",7,"^I",102,"^J",29,"^K",["^L",["^M",["^L",[["~$target","~$const-map-name","~$const-map"]]]]]],"^:","~$quil.util/make-quil-constant-map","^F","resources/public/js/development/quil/util.cljc","^J",29,"^O",["^L",[["^X","^Y","^Z"]]],"^P",null,"^Q",["^L",[null,null]],"^H",1,"^R",false,"^G",102,"^S","~$any","^I",102,"^U",3,"^V",true,"^K",["^L",["^M",["^L",[["^X","^Y","^Z"]]]]]],"~$initial-internal-state",["^ ","^:","~$quil.util/initial-internal-state","^F","resources/public/js/development/quil/util.cljc","^G",9,"^H",1,"^I",9,"^J",28,"^E",["^ ","^F","/Users/mmz/Projects/matrixrain/resources/public/js/development/quil/util.cljc","^G",9,"^H",6,"^I",9,"^J",28],"~:doc","Internal state map used to initiate all sketches.","~:tag","~$cljs.core/IMap"],"~$print-definition-list",["^ ","^D",null,"^E",["^ ","^F","/Users/mmz/Projects/matrixrain/resources/public/js/development/quil/util.cljc","^G",65,"^H",7,"^I",65,"^J",28,"^K",["^L",["^M",["^L",[["~$definitions"]]]]]],"^:","~$quil.util/print-definition-list","^F","resources/public/js/development/quil/util.cljc","^J",28,"^O",["^L",[["^17"]]],"^P",null,"^Q",["^L",[null,null]],"^H",1,"^R",false,"^G",65,"^S","^10","^I",65,"^U",1,"^V",true,"^K",["^L",["^M",["^L",[["^17"]]]]]],"~$generate-quil-constants",["^ ","^D",null,"^E",["^ ","^F","/Users/mmz/Projects/matrixrain/resources/public/js/development/quil/util.cljc","^G",109,"^H",11,"^I",109,"^J",34,"~:macro",true,"^K",["^L",["^M",["^L",[["^X","~$&","~$opts"]]]]],"~:top-fn",["^ ","^R",true,"^U",1,"^O",["^L",[["^L",["^X","^1;"]]]],"^K",["^L",[["^X","~$&","^1;"]]],"^Q",["^L",[null]]]],"^:","~$quil.util/generate-quil-constants","^F","resources/public/js/development/quil/util.cljc","^J",34,"^1<",["^ ","^R",true,"^U",1,"^O",["^L",[["^L",["^X","^1;"]]]],"^K",["^L",[["^X","~$&","^1;"]]],"^Q",["^L",[null]]],"^O",["^L",[["^L",["^X","^1;"]]]],"^P",null,"^Q",["^L",[null]],"^H",1,"^R",true,"^G",109,"^1:",true,"^S","^10","^I",109,"^U",1,"^V",false,"^K",["^L",[["^X","~$&","^1;"]]]],"~$resolve-constant-key",["^ ","^D",null,"^E",["^ ","^F","/Users/mmz/Projects/matrixrain/resources/public/js/development/quil/util.cljc","^G",32,"^H",7,"^I",32,"^J",27,"^K",["^L",["^M",["^L",[["~$key","~$mappings"]]]]],"^13","Returns the val associated with key in mappings or key directly if it\n  is one of the vals in mappings. Otherwise throws an exception."],"^:","~$quil.util/resolve-constant-key","^F","resources/public/js/development/quil/util.cljc","^J",27,"^O",["^L",[["^1?","^1@"]]],"^P",null,"^Q",["^L",[null,null]],"^H",1,"^R",false,"^G",32,"^S",["^9",[null,"^10"]],"^I",32,"^U",2,"^V",true,"^K",["^L",["^M",["^L",[["^1?","^1@"]]]]],"^13","Returns the val associated with key in mappings or key directly if it\n  is one of the vals in mappings. Otherwise throws an exception."],"~$no-fn",["^ ","^D",null,"^E",["^ ","^F","/Users/mmz/Projects/matrixrain/resources/public/js/development/quil/util.cljc","^G",5,"^H",7,"^I",5,"^J",12,"^K",["^L",["^M",["^L",[[]]]]],"^13","Function that does nothing."],"^:","~$quil.util/no-fn","^F","resources/public/js/development/quil/util.cljc","^J",12,"^O",["^L",[[]]],"^P",null,"^Q",["^L",[null,null]],"^H",1,"^R",false,"^G",5,"^S","~$clj-nil","^I",5,"^U",0,"^V",true,"^K",["^L",["^M",["^L",[[]]]]],"^13","Function that does nothing."],"~$prepare-quil-clj-constants",["^ ","^D",null,"^E",["^ ","^F","/Users/mmz/Projects/matrixrain/resources/public/js/development/quil/util.cljc","^G",90,"^H",7,"^I",90,"^J",33,"^K",["^L",["^M",["^L",[["~$constants"]]]]]],"^:","~$quil.util/prepare-quil-clj-constants","^F","resources/public/js/development/quil/util.cljc","^J",33,"^O",["^L",[["^1F"]]],"^P",null,"^Q",["^L",[null,null]],"^H",1,"^R",false,"^G",90,"^S","^10","^I",90,"^U",1,"^V",true,"^K",["^L",["^M",["^L",[["^1F"]]]]]],"~$prepare-quil-cljs-constants",["^ ","^D",null,"^E",["^ ","^F","/Users/mmz/Projects/matrixrain/resources/public/js/development/quil/util.cljc","^G",96,"^H",7,"^I",96,"^J",34,"^K",["^L",["^M",["^L",[["^1F"]]]]]],"^:","~$quil.util/prepare-quil-cljs-constants","^F","resources/public/js/development/quil/util.cljc","^J",34,"^O",["^L",[["^1F"]]],"^P",null,"^Q",["^L",[null,null]],"^H",1,"^R",false,"^G",96,"^S","^10","^I",96,"^U",1,"^V",true,"^K",["^L",["^M",["^L",[["^1F"]]]]]],"~$length-of-longest-key",["^ ","^D",null,"^E",["^ ","^F","/Users/mmz/Projects/matrixrain/resources/public/js/development/quil/util.cljc","^G",44,"^H",8,"^I",44,"^J",29,"~:private",true,"^K",["^L",["^M",["^L",[["~$m"]]]]],"^13","Returns the length of the longest key of map m. Assumes m's keys are strings\n   and returns 0 if map is empty:\n   (length-of-longest-key {\"foo\" 1 \"barr\" 2 \"bazzz\" 3}) ;=> 5\n   (length-of-longest-key {}) ;=> 0"],"^1K",true,"^:","~$quil.util/length-of-longest-key","^F","resources/public/js/development/quil/util.cljc","^J",29,"^O",["^L",[["~$m"]]],"^P",null,"^Q",["^L",[null,null]],"^H",1,"^R",false,"^G",44,"^S",["^9",["^10","~$number","^1D"]],"^I",44,"^U",1,"^V",true,"^K",["^L",["^M",["^L",[["~$m"]]]]],"^13","Returns the length of the longest key of map m. Assumes m's keys are strings\n   and returns 0 if map is empty:\n   (length-of-longest-key {\"foo\" 1 \"barr\" 2 \"bazzz\" 3}) ;=> 5\n   (length-of-longest-key {}) ;=> 0"],"~$gen-padding",["^ ","^D",null,"^E",["^ ","^F","/Users/mmz/Projects/matrixrain/resources/public/js/development/quil/util.cljc","^G",53,"^H",8,"^I",53,"^J",19,"^1K",true,"^K",["^L",["^M",["^L",[["~$len"],["^1O","~$pad"],["~$s","^1O","^1P"]]]]],"^13","Generates a padding string starting concatting s with len times pad:\n   (gen-padding \"\" 5 \"b\") ;=> \"bbbbb\"\n   May be called without starting string s in which case it defaults to the\n   empty string and also without pad in which case it defaults to a single space","^1<",["^ ","^R",false,"^U",3,"^O",["^L",[["^1O"],["^1O","^1P"],["~$s","^1O","^1P"]]],"^K",["^L",[["^1O"],["^1O","^1P"],["~$s","^1O","^1P"]]],"^Q",["^L",[null,null,null]]]],"^1K",true,"^:","~$quil.util/gen-padding","^F","resources/public/js/development/quil/util.cljc","^J",19,"^1<",["^ ","^R",false,"^U",3,"^O",["^L",[["^1O"],["^1O","^1P"],["~$s","^1O","^1P"]]],"^K",["^L",[["^1O"],["^1O","^1P"],["~$s","^1O","^1P"]]],"^Q",["^L",[null,null,null]]],"^O",["^L",[["^1O"],["^1O","^1P"],["~$s","^1O","^1P"]]],"^P",null,"^Q",["^L",[null,null,null]],"^H",1,"^R",false,"^G",53,"^I",53,"^U",3,"^V",true,"^K",["^L",[["^1O"],["^1O","^1P"],["~$s","^1O","^1P"]]],"^13","Generates a padding string starting concatting s with len times pad:\n   (gen-padding \"\" 5 \"b\") ;=> \"bbbbb\"\n   May be called without starting string s in which case it defaults to the\n   empty string and also without pad in which case it defaults to a single space"],"~$prepare-quil-name",["^ ","^D",null,"^E",["^ ","^F","/Users/mmz/Projects/matrixrain/resources/public/js/development/quil/util.cljc","^G",85,"^H",7,"^I",85,"^J",24,"^K",["^L",["^M",["^L",[["~$const-keyword"]]]]]],"^:","~$quil.util/prepare-quil-name","^F","resources/public/js/development/quil/util.cljc","^J",24,"^O",["^L",[["^1S"]]],"^P",null,"^Q",["^L",[null,null]],"^H",1,"^R",false,"^G",85,"^S","^10","^I",85,"^U",1,"^V",true,"^K",["^L",["^M",["^L",[["^1S"]]]]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^9",["~:frame-rate","~:else","~$do","~$js/Processing.prototype.PConstants","~:looping?","~:clj","~$cljs.core/aget","~$def"]],"~:order",["^1Y","^21","^1Z","^23","^20","^24","^22","^1["]],"^13","Utility fns"]